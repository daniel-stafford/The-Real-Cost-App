Todos:
☐ REMEMBER TO KEEP THIS APP SIMPLE!!!! MININUM VIABLE PRODUCT

Client Side:
  ✔ Set up conditional routes for logged in/out users  @done(19-10-07 14:05)
  ✔ Create menus for logged in / logged out  @done(19-10-07 14:05)
  ✔ Sign up form functionalty @done(19-10-07 15:30)
  ✔ Refactor app.js file, it's a mess. @done(19-10-07 15:31)
  ✔ Make expensedetail component with dynamic routing @today @done(19-10-09 23:12)
  ☐ Filter feature @today
  ☐ Sort feature (by date, by title, etc.)
  ☐ Fix error handling, it's really bad ATM  
  ☐ Confirm password field when signing up @done(19-10-08 20:21)
  ✔ Start styling @done(19-10-08 18:19)
  ☐ Finish fixing error handling notifications @today
  ☐ Create a good 404 page 
  ☐ Redirects for create new, signing up, deleting, etc.@today
  ☐ Only render user's own expenses when logged in @today
  ☐ Modal for delete confirmation
  

  
Server Side:
  ✔ expenses query by id (logged in user) @done(19-10-10 07:18)
  ☐ Get price to accept decimals (to the nearest hundreth)

Feature Ideas:
  ☐ Sigin up via google/facebook
  ☐ Email to user after signing up (will need to add email field)
  ☐ Forgot password feature
  ☐ Summary page with information visualizaion
  ☐ User can edit expenses (change title, uses, etc.)
  ☐ bad words filter
  ☐ picture field for database? 
  ☐ categories for expense (like with mint)
  ☐ Comment feature
  ☐ Click add use opens up a modal, where uses can add a date of use, duration of use, and any notes.  May have to create seperate "use" schema and apply references.

Random Ideas:
  ☐ Consider using context for logged in user, avoid prop drilling.
  ☐ Form validation (e.g. check if email) Consider learning regex to do this.
  ☐ Create gif of app use as a tutorial

Broad Ideas:
    ☐ Consider limiting the app to just the gym membership - track visits, cost, search for other gyms in your areas, track opening hour times, track duration, etc.  Get into specifics.  




  


